name: Lint and Test charts
on:
  pull_request:
    branches:
      - master
      - release/**
  workflow_dispatch:
jobs:
  lint:
    runs-on: ubuntu-latest
    outputs:
      charts: ${{ steps.list-changed.outputs.charts }}
      images: ${{ steps.extract-images.outputs.images }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v1.1

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.1.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: echo "::set-output name=charts::$(ct list-changed --chart-dirs kubernetes | jq -R . | jq -sc .)"

      - name: Run chart-testing (lint)
        run: ct lint --chart-dirs kubernetes

      - name: Create kind cluster
        uses: helm/kind-action@v1.2.0
        if: fromJSON(steps.list-changed.outputs.charts)[0] != null

      - name: Run chart-testing (install)
        run: ct install

      - name: Extract images
        id: extract-images
        if: fromJSON(steps.list-changed.outputs.charts)[0] != null
        run: |
          echo "${{ steps.list-changed.outputs.charts }}" | jq -r '.[]' | while read chart do;
            helm template release "$chart" --dry-run --replace --dependency-update | yq e -N '.. | .image? | select(.)' -
            helm show chart "$chart" | yq e '.annotations."artifacthub.io/images"' - | yq e -N '.[] | .image' -
          done | sort -u > extracted-images.txt
          echo "::set-output name=images::$(cat extracted-images.txt | jq -R . | jq -sc .)"

  scan-charts:
    # Equivalent to:
    #   ct list-changed --chart-dirs kubernetes | while read chart; do
    #     helm template release "$chart" --dry-run --replace --dependency-update > "${chart}/k8s-manifest.yaml"
    #     snyk iac test "${chart}/k8s-manifest.yaml"
    #   done
    needs: lint
    if: fromJSON(needs.lint.outputs.charts)[0] != null
    strategy:
      matrix:
        chart: ${{ fromJSON(needs.lint.outputs.charts) }}
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Helm
        uses: azure/setup-helm@v1.1

      - name: Template chart (${{ matrix.chart }})
        run: helm template release ${{ matrix.chart }} --dry-run --replace --dependency-update > ${{ matrix.chart }}/k8s-manifest.yaml

      - name: Run Snyk to check Kubernetes resources (${{ matrix.chart }})
        uses: snyk/actions/iac@master
        #continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          file: ${{ matrix.chart }}/k8s-manifest.yaml

      #- name: Upload result to GitHub Code Scanning
      #  uses: github/codeql-action/upload-sarif@v1
      #  with:
      #    sarif_file: snyk.sarif

  scan-images:
    needs: lint
    if: fromJSON(needs.lint.outputs.images)[0] != null
    strategy:
      matrix:
        image: ${{ fromJSON(needs.lint.outputs.images) }}
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Run Snyk to check Docker image for vulnerabilities (${{ matrix.image }})
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ matrix.image }}


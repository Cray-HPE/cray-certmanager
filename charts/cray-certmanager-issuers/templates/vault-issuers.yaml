{{- range $.Values.vaultIssuers }}
#
# Service Account is specific to issuers, and requires
# policy in vault against a PKI engine to allow auth.
#
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-manager-issuer-{{ .instance }}
  namespace: {{ .namespace }}
---
#
# Add an RBAC Role so that cert-manager can get tokens
# for the ServiceAccount. This is for cert-maanger >= v1.12
#
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cert-manager-issuer-{{ .instance }}
  namespace: {{ .namespace }}
rules:
  - apiGroups: ['']
    resources: ['serviceaccounts/token']
    resourceNames: ['vault-issuer']
    verbs: ['create']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cert-manager-issuer-{{ .instance }}
  namespace: {{ .namespace }}
subjects:
  - kind: ServiceAccount
    name: cert-manager-issuer-{{ .instance }}
    namespace: {{ .namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cert-manager-issuer-{{ .instance }}
---
#
# Create a vault issuer. The  references a service
# account for Secretless Authentication
#
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: cert-manager-issuer-{{ .instance }}
  namespace: {{ .namespace }}
spec:
  vault:
    path: {{ .vaultPKIPath }}/{{ .vaultPKIRole }}
    server: {{ .vaultServer }}
    auth:
      kubernetes:
        role: {{ .vaultPKIRole }}
        mountPath: {{ .vaultK8SAuthPath }}
        serviceAccountRef:
          name: cert-manager-issuer-{{ .instance }}
---
{{- end }}
